// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  year     Year[]
  accounts Account[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Year {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  year        String
  currentYear Boolean  @default(value: true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  month Month[]

  @@unique([year, userId])
}

model Month {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  monthName String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  yearId String @db.ObjectId
  year   Year   @relation(fields: [yearId], references: [id])

  expenseContent ExpenseContent[]
}

model ExpenseContent {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  date          DateTime
  netProfit     NetProfit
  fixedExpenses FixedExpenses[]
  addExpenses   AddExpenses[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  monthId String @db.ObjectId
  month   Month? @relation(fields: [monthId], references: [id])
}

type NetProfit {
  salary    Float
  incentive Float? @default(value: 0)
}

type FixedExpenses {
  description String
  value       Float  @default(value: 0)
}

model AddExpenses {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  description String
  value       Float  @default(value: 0)

  expenseContentId String         @db.ObjectId
  expenseContent   ExpenseContent @relation(fields: [expenseContentId], references: [id])
}

enum MONTHS {
  January
  February
  March
  April
  May
  June
  July
  August
  September
  October
  November
  December
}
